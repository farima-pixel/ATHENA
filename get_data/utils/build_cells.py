import sumolib
import json

# parse the net
net = sumolib.net.readNet('../scenario/porto.net.xml')

cells = {
	1 : ((41.14, -8.65), (41.14, -8.61857143),(41.14428571, -8.65), (41.14428571, -8.61857143)),
	2 : ((41.14, -8.61857143), (41.14, -8.58714286),(41.14428571, -8.61857143), (41.14428571, -8.58714286)),
	3 : ((41.14, -8.58714286), (41.14, -8.55571429),(41.14428571, -8.58714286), (41.14428571, -8.55571429)),
	4 : ((41.14, -8.55571429), (41.14, -8.52428571),(41.14428571, -8.55571429), (41.14428571, -8.52428571)),
	5 : ((41.14, -8.52428571), (41.14, -8.49285714),(41.14428571, -8.52428571), (41.14428571, -8.49285714)),
	6 : ((41.14, -8.49285714), (41.14, -8.46142857),(41.14428571, -8.49285714), (41.14428571, -8.46142857)),
	7 : ((41.14, -8.46142857), (41.14, -8.43),(41.14428571, -8.46142857), (41.14428571, -8.43)),
	8 : ((41.14428571, -8.65), (41.14428571, -8.61857143),(41.14857143, -8.65), (41.14857143, -8.61857143)),
	9 : ((41.14428571, -8.61857143), (41.14428571, -8.58714286),(41.14857143, -8.61857143), (41.14857143, -8.58714286)),
	10 : ((41.14428571, -8.58714286), (41.14428571, -8.55571429),(41.14857143, -8.58714286), (41.14857143, -8.55571429)),
	11 : ((41.14428571, -8.55571429), (41.14428571, -8.52428571),(41.14857143, -8.55571429), (41.14857143, -8.52428571)),
	12 : ((41.14428571, -8.52428571), (41.14428571, -8.49285714),(41.14857143, -8.52428571), (41.14857143, -8.49285714)),
	13 : ((41.14428571, -8.49285714), (41.14428571, -8.46142857),(41.14857143, -8.49285714), (41.14857143, -8.46142857)),
	14 : ((41.14428571, -8.46142857), (41.14428571, -8.43),(41.14857143, -8.46142857), (41.14857143, -8.43)),
	15 : ((41.14857143, -8.65), (41.14857143, -8.61857143),(41.15285714, -8.65), (41.15285714, -8.61857143)),
	16 : ((41.14857143, -8.61857143), (41.14857143, -8.58714286),(41.15285714, -8.61857143), (41.15285714, -8.58714286)),
	17 : ((41.14857143, -8.58714286), (41.14857143, -8.55571429),(41.15285714, -8.58714286), (41.15285714, -8.55571429)),
	18 : ((41.14857143, -8.55571429), (41.14857143, -8.52428571),(41.15285714, -8.55571429), (41.15285714, -8.52428571)),
	19 : ((41.14857143, -8.52428571), (41.14857143, -8.49285714),(41.15285714, -8.52428571), (41.15285714, -8.49285714)),
	20 : ((41.14857143, -8.49285714), (41.14857143, -8.46142857),(41.15285714, -8.49285714), (41.15285714, -8.46142857)),
	21 : ((41.14857143, -8.46142857), (41.14857143, -8.43),(41.15285714, -8.46142857), (41.15285714, -8.43)),
	22 : ((41.15285714, -8.65), (41.15285714, -8.61857143),(41.15714286, -8.65), (41.15714286, -8.61857143)),
	23 : ((41.15285714, -8.61857143), (41.15285714, -8.58714286),(41.15714286, -8.61857143), (41.15714286, -8.58714286)),
	24 : ((41.15285714, -8.58714286), (41.15285714, -8.55571429),(41.15714286, -8.58714286), (41.15714286, -8.55571429)),
	25 : ((41.15285714, -8.55571429), (41.15285714, -8.52428571),(41.15714286, -8.55571429), (41.15714286, -8.52428571)),
	26 : ((41.15285714, -8.52428571), (41.15285714, -8.49285714),(41.15714286, -8.52428571), (41.15714286, -8.49285714)),
	27 : ((41.15285714, -8.49285714), (41.15285714, -8.46142857),(41.15714286, -8.49285714), (41.15714286, -8.46142857)),
	28 : ((41.15285714, -8.46142857), (41.15285714, -8.43),(41.15714286, -8.46142857), (41.15714286, -8.43)),
	29 : ((41.15714286, -8.65), (41.15714286, -8.61857143),(41.16142857, -8.65), (41.16142857, -8.61857143)),
	30 : ((41.15714286, -8.61857143), (41.15714286, -8.58714286),(41.16142857, -8.61857143), (41.16142857, -8.58714286)),
	31 : ((41.15714286, -8.58714286), (41.15714286, -8.55571429),(41.16142857, -8.58714286), (41.16142857, -8.55571429)),
	32 : ((41.15714286, -8.55571429), (41.15714286, -8.52428571),(41.16142857, -8.55571429), (41.16142857, -8.52428571)),
	33 : ((41.15714286, -8.52428571), (41.15714286, -8.49285714),(41.16142857, -8.52428571), (41.16142857, -8.49285714)),
	34 : ((41.15714286, -8.49285714), (41.15714286, -8.46142857),(41.16142857, -8.49285714), (41.16142857, -8.46142857)),
	35 : ((41.15714286, -8.46142857), (41.15714286, -8.43),(41.16142857, -8.46142857), (41.16142857, -8.43)),
	36 : ((41.16142857, -8.65), (41.16142857, -8.61857143),(41.16571429, -8.65), (41.16571429, -8.61857143)),
	37 : ((41.16142857, -8.61857143), (41.16142857, -8.58714286),(41.16571429, -8.61857143), (41.16571429, -8.58714286)),
	38 : ((41.16142857, -8.58714286), (41.16142857, -8.55571429),(41.16571429, -8.58714286), (41.16571429, -8.55571429)),
	39 : ((41.16142857, -8.55571429), (41.16142857, -8.52428571),(41.16571429, -8.55571429), (41.16571429, -8.52428571)),
	40 : ((41.16142857, -8.52428571), (41.16142857, -8.49285714),(41.16571429, -8.52428571), (41.16571429, -8.49285714)),
	41 : ((41.16142857, -8.49285714), (41.16142857, -8.46142857),(41.16571429, -8.49285714), (41.16571429, -8.46142857)),
	42 : ((41.16142857, -8.46142857), (41.16142857, -8.43),(41.16571429, -8.46142857), (41.16571429, -8.43)),
	43 : ((41.16571429, -8.65), (41.16571429, -8.61857143),(41.17, -8.65), (41.17, -8.61857143)),
	44 : ((41.16571429, -8.61857143), (41.16571429, -8.58714286),(41.17, -8.61857143), (41.17, -8.58714286)),
	45 : ((41.16571429, -8.58714286), (41.16571429, -8.55571429),(41.17, -8.58714286), (41.17, -8.55571429)),
	46 : ((41.16571429, -8.55571429), (41.16571429, -8.52428571),(41.17, -8.55571429), (41.17, -8.52428571)),
	47 : ((41.16571429, -8.52428571), (41.16571429, -8.49285714),(41.17, -8.52428571), (41.17, -8.49285714)),
	48 : ((41.16571429, -8.49285714), (41.16571429, -8.46142857),(41.17, -8.49285714), (41.17, -8.46142857)),
	49 : ((41.16571429, -8.46142857), (41.16571429, -8.43),(41.17, -8.46142857), (41.17, -8.43)),
}

print(len(cells))

final = {}

for i in cells:
	final[i] = {}
	current = []
	for j in cells[i]:
		x, y = net.convertLonLat2XY(j[1], j[0])
		current.append((x,y))
	final[i] = current

with open('cells.json', 'w', encoding='utf-8') as f:
    json.dump(final, f, ensure_ascii=False, indent=4)